security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            # On indique à Symfony la classe permettant de s'authentifié (LoginFormAuthenticator), symfony va faire tout le travail pour nous et va contrôler au moment de la connexion, l'email et le mot de passe.
            custom_authenticator: App\Security\LoginFormAuthenticator
            # On indique à Symfony la route permettant de se déconnecter.
            logout:
                path: app_logout
                # On définit la route de destination une fois déconnecté
                target: blog

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # On indique à symfony que seulement les utilisateurs ROLE_ADMIN en BDD auront accès au Backoffice donc à la route/admin
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    #si un utilisateur non ROLE_ADMIN tente d'acceder au Backoffice, on le redirige vers le blog
    access_denied_url: blog